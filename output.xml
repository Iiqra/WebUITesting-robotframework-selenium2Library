<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.2 (Python 3.7.4 on darwin)" generated="20201220 11:59:18.705" rpa="false">
<suite id="s1" name="VideoSharingFunctionality" source="/Users/iqraali/Projects/QA Job Assessments/QA Assessment - YT Video Sharing/suites/VideoSharingFunctionality.robot">
<test id="s1-t1" name="Verify-Video-LinkSharing-Using-ShareButton">
<kw name="Open Browser" library="SeleniumLibrary">
<doc>Opens a new browser instance to the optional ``url``.</doc>
<arguments>
<arg>${VideoURL}</arg>
<arg>${Browser}</arg>
</arguments>
<msg timestamp="20201220 11:59:19.440" level="INFO">Opening browser 'Chrome' to base url 'https://www.youtube.com/watch?v=k6NmJKcS7wk'.</msg>
<status status="PASS" starttime="20201220 11:59:19.439" endtime="20201220 11:59:28.050"></status>
</kw>
<kw name="ByPass Youtube Agreement Popup">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>${Locator_YTAgreementPopup}</arg>
<arg>${Timeout}</arg>
</arguments>
<status status="PASS" starttime="20201220 11:59:28.053" endtime="20201220 11:59:32.307"></status>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<arguments>
<arg>None</arg>
<arg>TAB</arg>
</arguments>
<msg timestamp="20201220 11:59:32.309" level="INFO">Sending key(s) ('TAB',) to page.</msg>
<msg timestamp="20201220 11:59:32.309" level="INFO">Pressing special key TAB to browser.</msg>
<msg timestamp="20201220 11:59:32.309" level="INFO">Releasing special key TAB.</msg>
<status status="PASS" starttime="20201220 11:59:32.308" endtime="20201220 11:59:32.398"></status>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<arguments>
<arg>None</arg>
<arg>TAB</arg>
</arguments>
<msg timestamp="20201220 11:59:32.399" level="INFO">Sending key(s) ('TAB',) to page.</msg>
<msg timestamp="20201220 11:59:32.399" level="INFO">Pressing special key TAB to browser.</msg>
<msg timestamp="20201220 11:59:32.399" level="INFO">Releasing special key TAB.</msg>
<status status="PASS" starttime="20201220 11:59:32.398" endtime="20201220 11:59:32.453"></status>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<arguments>
<arg>None</arg>
<arg>RETURN</arg>
</arguments>
<msg timestamp="20201220 11:59:32.454" level="INFO">Sending key(s) ('RETURN',) to page.</msg>
<msg timestamp="20201220 11:59:32.454" level="INFO">Pressing special key RETURN to browser.</msg>
<msg timestamp="20201220 11:59:32.454" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20201220 11:59:32.454" endtime="20201220 11:59:32.644"></status>
</kw>
<status status="PASS" starttime="20201220 11:59:28.051" endtime="20201220 11:59:32.644"></status>
</kw>
<kw name="ByPass SignIn Popup">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>${Locator_YTSignInPopup}</arg>
<arg>${Timeout}</arg>
</arguments>
<status status="PASS" starttime="20201220 11:59:32.645" endtime="20201220 11:59:33.303"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${MinWait}</arg>
</arguments>
<msg timestamp="20201220 11:59:34.304" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20201220 11:59:33.303" endtime="20201220 11:59:34.304"></status>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<arguments>
<arg>None</arg>
<arg>TAB</arg>
</arguments>
<msg timestamp="20201220 11:59:34.305" level="INFO">Sending key(s) ('TAB',) to page.</msg>
<msg timestamp="20201220 11:59:34.306" level="INFO">Pressing special key TAB to browser.</msg>
<msg timestamp="20201220 11:59:34.306" level="INFO">Releasing special key TAB.</msg>
<status status="PASS" starttime="20201220 11:59:34.304" endtime="20201220 11:59:34.491"></status>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<arguments>
<arg>None</arg>
<arg>TAB</arg>
</arguments>
<msg timestamp="20201220 11:59:34.491" level="INFO">Sending key(s) ('TAB',) to page.</msg>
<msg timestamp="20201220 11:59:34.491" level="INFO">Pressing special key TAB to browser.</msg>
<msg timestamp="20201220 11:59:34.491" level="INFO">Releasing special key TAB.</msg>
<status status="PASS" starttime="20201220 11:59:34.491" endtime="20201220 11:59:34.765"></status>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<arguments>
<arg>None</arg>
<arg>RETURN</arg>
</arguments>
<msg timestamp="20201220 11:59:34.766" level="INFO">Sending key(s) ('RETURN',) to page.</msg>
<msg timestamp="20201220 11:59:34.766" level="INFO">Pressing special key RETURN to browser.</msg>
<msg timestamp="20201220 11:59:34.766" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20201220 11:59:34.765" endtime="20201220 11:59:35.053"></status>
</kw>
<status status="PASS" starttime="20201220 11:59:32.645" endtime="20201220 11:59:35.054"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${MinWait}</arg>
</arguments>
<msg timestamp="20201220 11:59:36.058" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20201220 11:59:35.055" endtime="20201220 11:59:36.058"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>${Locator_VideoShareIcon}</arg>
<arg>${Timeout}</arg>
</arguments>
<status status="PASS" starttime="20201220 11:59:36.058" endtime="20201220 11:59:36.971"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>${Locator_VideoShareIcon}</arg>
</arguments>
<msg timestamp="20201220 11:59:36.972" level="INFO">Clicking element 'xpath://html/body/ytd-app/div/ytd-page-manager/ytd-watch-flexy/div[4]/div[1]/div/div[5]/div[2]/ytd-video-primary-info-renderer/div/div/div[3]/div/ytd-menu-renderer/div/ytd-button-renderer[1]/a/yt-formatted-string'.</msg>
<status status="PASS" starttime="20201220 11:59:36.971" endtime="20201220 11:59:37.255"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>${Locator_ShareIconCopyBtn}</arg>
<arg>${Timeout}</arg>
</arguments>
<status status="PASS" starttime="20201220 11:59:37.255" endtime="20201220 11:59:37.869"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>${Locator_ShareIconCopyBtn}</arg>
</arguments>
<msg timestamp="20201220 11:59:37.870" level="INFO">Clicking element 'id:copy-button'.</msg>
<status status="PASS" starttime="20201220 11:59:37.869" endtime="20201220 11:59:38.060"></status>
</kw>
<kw name="Get Text From Clipboard" library="helperKeywords">
<assign>
<var>${copied_video_url}</var>
</assign>
<msg timestamp="20201220 11:59:38.133" level="INFO">${copied_video_url} = https://youtu.be/k6NmJKcS7wk</msg>
<status status="PASS" starttime="20201220 11:59:38.060" endtime="20201220 11:59:38.133"></status>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<doc>Executes the given JavaScript code with possible arguments.</doc>
<arguments>
<arg>window.open('')</arg>
</arguments>
<msg timestamp="20201220 11:59:38.137" level="INFO">Executing JavaScript:
window.open('')
Without any arguments.</msg>
<status status="PASS" starttime="20201220 11:59:38.134" endtime="20201220 11:59:38.204"></status>
</kw>
<kw name="Switch Window" library="SeleniumLibrary">
<doc>Switches to browser window matching ``locator``.</doc>
<arguments>
<arg>title=undefined</arg>
</arguments>
<status status="PASS" starttime="20201220 11:59:38.204" endtime="20201220 11:59:38.367"></status>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the current browser window to the provided ``url``.</doc>
<arguments>
<arg>${copied_video_url}</arg>
</arguments>
<msg timestamp="20201220 11:59:38.369" level="INFO">Opening url 'https://youtu.be/k6NmJKcS7wk'</msg>
<status status="PASS" starttime="20201220 11:59:38.368" endtime="20201220 11:59:40.881"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${MinWait}</arg>
</arguments>
<msg timestamp="20201220 11:59:41.883" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20201220 11:59:40.882" endtime="20201220 11:59:41.883"></status>
</kw>
<kw name="Get Window Titles" library="SeleniumLibrary">
<doc>Returns and logs titles of all windows of the selected browser.</doc>
<assign>
<var>@{titles}</var>
</assign>
<msg timestamp="20201220 11:59:42.596" level="INFO">Altogether 2 items.
1: 'Ik heb even laten zien wat hij kan' | WEGMISBRUIKERS - YouTube
2: 'Ik heb even laten zien wat hij kan' | WEGMISBRUIKERS - YouTube</msg>
<msg timestamp="20201220 11:59:42.597" level="INFO">@{titles} = [ 'Ik heb even laten zien wat hij kan' | WEGMISBRUIKERS - YouTube | 'Ik heb even laten zien wat hij kan' | WEGMISBRUIKERS - YouTube ]</msg>
<status status="PASS" starttime="20201220 11:59:41.884" endtime="20201220 11:59:42.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${titles}[0]</arg>
</arguments>
<msg timestamp="20201220 11:59:42.598" level="INFO">'Ik heb even laten zien wat hij kan' | WEGMISBRUIKERS - YouTube</msg>
<status status="PASS" starttime="20201220 11:59:42.597" endtime="20201220 11:59:42.598"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${titles}[0]</arg>
<arg>${titles}[1]</arg>
</arguments>
<status status="PASS" starttime="20201220 11:59:42.598" endtime="20201220 11:59:42.599"></status>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="teardown">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20201220 11:59:42.604" endtime="20201220 11:59:42.977"></status>
</kw>
<status status="PASS" starttime="20201220 11:59:19.418" endtime="20201220 11:59:42.984" critical="yes"></status>
</test>
<doc>1. Launch browser with a YT video URL
2. Pass youtube agreement Popup
3. Pass youtube signin Popup
4. Click on video share button
5. Click on Copy url button [video link will be saved on clipborad]
6. Launch another browser tab with the copied video URL
7. Verify if the same video is playing in the new tab, by verifying both titles</doc>
<status status="PASS" starttime="20201220 11:59:18.708" endtime="20201220 11:59:42.992"></status>
</suite>
<statistics>
<total>
<stat pass="1" fail="0">Critical Tests</stat>
<stat pass="1" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="0" id="s1" name="VideoSharingFunctionality">VideoSharingFunctionality</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
