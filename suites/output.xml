<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.2 (Python 3.7.4 on darwin)" generated="20201215 15:12:22.596" rpa="false">
<suite id="s1" name="VideoSharingFunctionality" source="/Users/iqraali/Projects/QA Job Assessments/Selenium with Python for web UI testing/suites/VideoSharingFunctionality.robot">
<test id="s1-t1" name="Verify-Video-LinkSharing-Using-ShareButton">
<kw name="Open Browser with Goto URL">
<kw name="Open Browser" library="SeleniumLibrary">
<doc>Opens a new browser instance to the optional ``url``.</doc>
<arguments>
<arg>${CompleteURL}</arg>
<arg>${Browser}</arg>
</arguments>
<msg timestamp="20201215 15:12:22.928" level="INFO">Opening browser 'Chrome' to base url 'https://www.youtube.com/watch?v=k6NmJKcS7wk'.</msg>
<status status="PASS" starttime="20201215 15:12:22.928" endtime="20201215 15:12:29.289"></status>
</kw>
<status status="PASS" starttime="20201215 15:12:22.927" endtime="20201215 15:12:29.290"></status>
</kw>
<kw name="ByPass Youtube Agreement Popup">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>id:dialog</arg>
<arg>${Timeout}</arg>
<arg>loglevel=DEBUG</arg>
</arguments>
<status status="PASS" starttime="20201215 15:12:29.291" endtime="20201215 15:12:31.812"></status>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<arguments>
<arg>None</arg>
<arg>TAB</arg>
</arguments>
<msg timestamp="20201215 15:12:31.813" level="INFO">Sending key(s) ('TAB',) to page.</msg>
<msg timestamp="20201215 15:12:31.814" level="INFO">Pressing special key TAB to browser.</msg>
<msg timestamp="20201215 15:12:31.814" level="INFO">Releasing special key TAB.</msg>
<status status="PASS" starttime="20201215 15:12:31.812" endtime="20201215 15:12:31.946"></status>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<arguments>
<arg>None</arg>
<arg>TAB</arg>
</arguments>
<msg timestamp="20201215 15:12:31.947" level="INFO">Sending key(s) ('TAB',) to page.</msg>
<msg timestamp="20201215 15:12:31.947" level="INFO">Pressing special key TAB to browser.</msg>
<msg timestamp="20201215 15:12:31.947" level="INFO">Releasing special key TAB.</msg>
<status status="PASS" starttime="20201215 15:12:31.947" endtime="20201215 15:12:32.006"></status>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<arguments>
<arg>None</arg>
<arg>RETURN</arg>
</arguments>
<msg timestamp="20201215 15:12:32.007" level="INFO">Sending key(s) ('RETURN',) to page.</msg>
<msg timestamp="20201215 15:12:32.007" level="INFO">Pressing special key RETURN to browser.</msg>
<msg timestamp="20201215 15:12:32.007" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20201215 15:12:32.006" endtime="20201215 15:12:32.578"></status>
</kw>
<status status="PASS" starttime="20201215 15:12:29.290" endtime="20201215 15:12:32.579"></status>
</kw>
<kw name="ByPass SignIn Popup">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>id:iframe</arg>
<arg>${Timeout}</arg>
</arguments>
<status status="PASS" starttime="20201215 15:12:32.580" endtime="20201215 15:12:32.845"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20201215 15:12:33.847" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20201215 15:12:32.845" endtime="20201215 15:12:33.847"></status>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<arguments>
<arg>None</arg>
<arg>TAB</arg>
</arguments>
<msg timestamp="20201215 15:12:33.848" level="INFO">Sending key(s) ('TAB',) to page.</msg>
<msg timestamp="20201215 15:12:33.848" level="INFO">Pressing special key TAB to browser.</msg>
<msg timestamp="20201215 15:12:33.848" level="INFO">Releasing special key TAB.</msg>
<status status="PASS" starttime="20201215 15:12:33.847" endtime="20201215 15:12:34.176"></status>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<arguments>
<arg>None</arg>
<arg>TAB</arg>
</arguments>
<msg timestamp="20201215 15:12:34.177" level="INFO">Sending key(s) ('TAB',) to page.</msg>
<msg timestamp="20201215 15:12:34.178" level="INFO">Pressing special key TAB to browser.</msg>
<msg timestamp="20201215 15:12:34.178" level="INFO">Releasing special key TAB.</msg>
<status status="PASS" starttime="20201215 15:12:34.176" endtime="20201215 15:12:34.358"></status>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<arguments>
<arg>None</arg>
<arg>RETURN</arg>
</arguments>
<msg timestamp="20201215 15:12:34.359" level="INFO">Sending key(s) ('RETURN',) to page.</msg>
<msg timestamp="20201215 15:12:34.359" level="INFO">Pressing special key RETURN to browser.</msg>
<msg timestamp="20201215 15:12:34.359" level="INFO">Releasing special key RETURN.</msg>
<status status="PASS" starttime="20201215 15:12:34.358" endtime="20201215 15:12:34.649"></status>
</kw>
<status status="PASS" starttime="20201215 15:12:32.579" endtime="20201215 15:12:34.650"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20201215 15:12:36.651" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20201215 15:12:34.650" endtime="20201215 15:12:36.651"></status>
</kw>
<kw name="Click Element By Locator">
<arguments>
<arg>xpath://html/body/ytd-app/div/ytd-page-manager/ytd-watch-flexy/div[4]/div[1]/div/div[5]/div[2]/ytd-video-primary-info-renderer/div/div/div[3]/div/ytd-menu-renderer/div/ytd-button-renderer[1]/a/yt-formatted-string</arg>
</arguments>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20201215 15:12:39.653" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201215 15:12:36.652" endtime="20201215 15:12:39.653"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>${locator}</arg>
<arg>${Timeout}</arg>
</arguments>
<status status="PASS" starttime="20201215 15:12:39.654" endtime="20201215 15:12:39.699"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
</arguments>
<msg timestamp="20201215 15:12:39.700" level="INFO">Clicking element 'xpath://html/body/ytd-app/div/ytd-page-manager/ytd-watch-flexy/div[4]/div[1]/div/div[5]/div[2]/ytd-video-primary-info-renderer/div/div/div[3]/div/ytd-menu-renderer/div/ytd-button-renderer[1]/a/yt-formatted-string'.</msg>
<status status="PASS" starttime="20201215 15:12:39.699" endtime="20201215 15:12:39.897"></status>
</kw>
<status status="PASS" starttime="20201215 15:12:36.652" endtime="20201215 15:12:39.897"></status>
</kw>
<kw name="Click Element By Locator">
<arguments>
<arg>id:copy-button</arg>
</arguments>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20201215 15:12:42.899" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201215 15:12:39.898" endtime="20201215 15:12:42.899"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>${locator}</arg>
<arg>${Timeout}</arg>
</arguments>
<status status="PASS" starttime="20201215 15:12:42.899" endtime="20201215 15:12:42.925"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>${locator}</arg>
</arguments>
<msg timestamp="20201215 15:12:42.925" level="INFO">Clicking element 'id:copy-button'.</msg>
<status status="PASS" starttime="20201215 15:12:42.925" endtime="20201215 15:12:43.032"></status>
</kw>
<status status="PASS" starttime="20201215 15:12:39.897" endtime="20201215 15:12:43.033"></status>
</kw>
<kw name="getTextFromClipboard">
<assign>
<var>${copied_video_url}</var>
</assign>
<msg timestamp="20201215 15:12:43.042" level="FAIL">No keyword with name 'getTextFromClipboard' found.</msg>
<status status="FAIL" starttime="20201215 15:12:43.042" endtime="20201215 15:12:43.042"></status>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="teardown">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20201215 15:12:43.043" endtime="20201215 15:12:43.333"></status>
</kw>
<status status="FAIL" starttime="20201215 15:12:22.926" endtime="20201215 15:12:43.333" critical="yes">No keyword with name 'getTextFromClipboard' found.</status>
</test>
<doc>1. Launch browser with a YT video URL
2. Pass youtube agreement Popup
3. Pass youtube signin Popup
4. Click on video share button
5. Click on Copy url button [video link will be saved on clipborad]
6. Launch another browser tab with the copied video URL
7. Verify if the same video is playing in the new tab, by verifying both titles</doc>
<status status="FAIL" starttime="20201215 15:12:22.602" endtime="20201215 15:12:43.339"></status>
</suite>
<statistics>
<total>
<stat pass="0" fail="1">Critical Tests</stat>
<stat pass="0" fail="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="0" fail="1" id="s1" name="VideoSharingFunctionality">VideoSharingFunctionality</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20201215 15:12:22.923" level="ERROR">Error in file '/Users/iqraali/Projects/QA Job Assessments/Selenium with Python for web UI testing/suites/VideoSharingFunctionality.robot' on line 12: Test library 'helperKeywords.py' does not exist.</msg>
</errors>
</robot>
